{
  "$schema": "http://json-schema.org/draft-06/schema#",
  "title": "Medic Mobile / Living Goods CouchDB schema",
  "definitions": {
    "sqlString": {
      "$comment": "Check for string that fits in NVARCHAR(4000).",
      "type": "string",
      "maxLength": 4000
    },
    "phoneNumber": {
      "$comment": "Check for string of digits. Most but not all start with +.",
      "type": "string",
      "maxLength": 4000,
      "pattern": "^(\\+?[\\d\\. -]+)?$"
    },
    "emptyString": {
      "$comment": "Check for string that must be empty if it exists.",
      "type": "string",
      "maxLength": 0
    },
    "booleanString": {
      "$comment": [
        "Strings that have a literal 'true' or 'false' or 'yes' or 'no'.",
        "Can also be '' (i.e., null) or an actual true or false",
        "(i.e., not a string)"],
      "enum": ["true", "false", "yes", "no", "", true, false]
    },
    "integerString": {
      "$comment": "Real ints or also those in strings.",
      "oneOf": [
        {
          "type": "string",
          "pattern": "^[0-9]+$",
          "maxLength": 10
        },
        {
          "type": "integer"
        },
        {
          "const": ""
        }
      ]
    },
    "floatString": {
      "$comment": "Real floats or those in strings. Also takes NaN.",
      "oneOf": [
        {
          "$comment": "From https://www.regular-expressions.info/floatingpoint.html",
          "type": "string",
          "pattern": "^[-+]?[0-9]*\\.?[0-9]+([eE][-+]?[0-9]+)?$"
        },
        {
          "type": "number"
        },
        {
          "enum": ["", "NaN"]
        }
      ]
    },
    "epoch_timestamp": {
      "$comment": "For epoch timestamps. Just checks for a positive number.",
      "type": "integer",
      "minimum": 0
    },
    "iso_timestamp": {
      "$comment": "ISO8601 timestamp, from https://gist.github.com/musubu/2596655",
      "type": "string",
      "pattern": "^([\\+-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T\\s]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24\\:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$"
    },
    "iso_date": {
      "$comment": "ISO8061 date, based on timestamp above, modified to allow single digits",
      "type": "string",
      "pattern": "^(?:([\\+-]?\\d{4}(?!\\d{2}\\b))((-?)((0?[1-9]|1[0-2])(\\3([12]\\d|0?[1-9]|3[01]))?))?)?$",
      "examples": ["2017-01-03", "1994-1-8"]
    },
    "mmmddyyyy_date": {
        "$comment": "Checks for date in Dec 31, 9999 format. From http://regexlib.com/REDetails.aspx?regexp_id=404",
        "type": "string",
        "pattern": "^((((Jan|Ma(r|y)|Jul|Aug|Oct|Dec)\\ 31)|((Jan|Ma(r|y)|Apr|Ju((ly?)|(ne?))|Aug|Oct|Sep|(Nov|Dec))\\ (0?[1-9]|([12]\\d)|30))|(Feb\\ (0?[1-9]|1\\d|2[0-8]|(29(?=,\\ ((1[6-9]|[2-9]\\d)(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00)))))))\\,\\ \\d{4})?$",
        "examples": ["Oct 12, 2018"]
      },
    "yyyymmmdd_date": {
        "$comment": "Checks for date in 1955-Dec-31 format. From http://regexlib.com/REDetails.aspx?regexp_id=404",
        "type": "string",
        "pattern": "^(\\d{4}-(((Jan|Ma(r|y)|Jul|Aug|Oct|Dec)-31)|((Jan|Ma(r|y)|Apr|Ju((ly?)|(ne?))|Aug|Oct|Sep|(Nov|Dec))-(0?[1-9]|([12]\\d)|30))|(Feb-(0?[1-9]|1\\d|2[0-8]|(29(?=,-((1[6-9]|[2-9]\\d)(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00))))))))?$",
        "examples": ["1995-Dec-31"]
    },
    "ddmmyyyy_date": {
      "$comment": "Checks for date like dd/mm/yyyy",
      "type": "string",
      "pattern": "^(?:([12]\\d|0?[1-9]|3[01])/(0?[1-9]|1[0-2])/\\d{4})?$",
      "examples": ["13/10/2016", "30/3/2017"]
    },
    "rev": {
      "$comment": "For CouchDB-style _rev",
      "type": "string",
      "pattern": "^[0-9]+-[0-9a-f]{32}$"
    },
    "reference": {
      "$comment": "Parent/Contact reference.",
      "oneOf": [
        { "enum": [ {}, null ] },
        {
          "type": "object",
          "required": ["_id"],
          "properties": {
            "_id": {
              "$comment": "Some of our references are not UUIDs, sadly.",
              "$ref": "#/definitions/sqlString"
            }
          }
        }
      ]
    },
    "latitude longitude": {
      "type": "string",
      "oneOf": [
        {"pattern": "^-?\\d+\\.\\d+\\s+-?\\d+\\.\\d+$"},
        {
          "$comment": "Any of these means null.",
          "enum": ["", " ", "0 0"]
        }
      ]
    }             
  },
  "type": "object",
  "oneOf": [
    {
      "$comment": "Validation for type == district_hospital",
      "required": ["_id", "_rev", "name", "type"],
      "properties": {
        "_id": {"$ref": "#/definitions/sqlString"},
        "_rev": {"$ref": "#/definitions/rev"},
        "name": {"$ref": "#/definitions/sqlString"},
        "type": { "const": "district_hospital"},
        "notes": {"$ref": "#/definitions/sqlString"},
        "contact": {"$ref": "#/definitions/reference"},
        "geolocation": {"$ref": "#/definitions/emptyString"},
        "external_id": {"$ref": "#/definitions/emptyString"},
        "reported_date": {"$ref": "#/definitions/epoch_timestamp"},
        "is_malaria_endemic": { "type": "boolean" },
        "is_amoxicilin_approved": { "type": "boolean" },
        "is_amoxicilin_dispersible": { "type": "boolean" }
      },
      "additionalProperties": false
    },
    {
      "$comment": "Validation for type == health_center.",
      "required": ["_id", "_rev", "name", "type", "parent"],
      "properties": {
        "_id": {"$ref": "#/definitions/sqlString"},
        "_rev": {"$ref": "#/definitions/rev"},
        "name": {"$ref": "#/definitions/sqlString"},
        "type": { "const": "health_center"},
        "notes": {"$ref": "#/definitions/sqlString"},
        "contact": {"$ref": "#/definitions/reference"},
        "supervisor": {"$ref": "#/definitions/sqlString"},
        "parent": {"$ref": "#/definitions/reference"},
        "reported_date": {"$ref": "#/definitions/epoch_timestamp"},
        "imported_date": {"$ref": "#/definitions/iso_timestamp"},
        "ward": {"$ref": "#/definitions/sqlString"},
        "parish": {"$ref": "#/definitions/sqlString"},
        "village": {"$ref": "#/definitions/sqlString"},
        "district": {"$ref": "#/definitions/sqlString"}, 
        "hsd": {"$ref": "#/definitions/sqlString"}, 
        "sub_county": {"$ref": "#/definitions/sqlString"},
        "sub_district": {"$ref": "#/definitions/sqlString"},
        "community_unit": {"$ref": "#/definitions/sqlString"},
        "landmark": {"$ref": "#/definitions/sqlString"},
        "health_facility": {"$ref": "#/definitions/sqlString"},
        "link_facility": {"$ref": "#/definitions/sqlString"},
        "external_id": {"$ref": "#/definitions/sqlString"},
        "facility_id": {"$ref": "#/definitions/integerString"},
        "geolocation": {"ref": "#/definitions/latitude longitude"},
        "is_in_rbf_pilot": {"$ref": "#/definitions/booleanString"},
        "survey": {
          "$comment": "This can show up, wierdly, but should have no data.",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "solar_light": {"$ref": "#/definitions/emptyString"},
            "water_filter": {"$ref": "#/definitions/emptyString"},
            "children_under_5": { "enum": ["0", ""] },
            "improved_cook_stove": {"$ref": "#/definitions/emptyString"}
          }
        }
      },
      "additionalProperties": false
    },
    { "$comment": "FIXME: We have some clinic records with person data. Just suppress them for now.",
      "properties": {
        "type": { "const": "clinic"}
      },
      "required": ["_id", "_rev", "name", "type", "parent", "date_of_birth"]
    },
    {
      "$comment": "Validation for type == clinic.",
      "required": ["_id", "_rev", "name", "type"],
      "properties": {
        "_id": {"$ref": "#/definitions/sqlString"},
        "_rev": {"$ref": "#/definitions/rev"},
        "name": {"$ref": "#/definitions/sqlString"},
        "type": { "const": "clinic"},
        "notes": {"$ref": "#/definitions/sqlString"},
        "contact": {"$ref": "#/definitions/reference"},
        "parent": {"$ref": "#/definitions/reference"},
        "geolocation": {"ref": "#/definitions/latitude longitude"},
        "location": {
          "$comment": "FIXME: Need to sort out these other location fields.",
          "$ref": "#/definitions/sqlString"
        },
        "location_calc": {"$ref": "#/definitions/sqlString"},
        "location_date": {"$ref": "#/definitions/integerString"},
        "location_hint_calc": {"$ref": "#/definitions/sqlString"},
        "location_hint_note": {"$ref": "#/definitions/sqlString"},
        "location_note_message": {"$ref": "#/definitions/sqlString"},
        
        
        "phone": {"$ref": "#/definitions/phoneNumber"},
        "imported_date": {"$ref": "#/definitions/iso_timestamp"},
        "reported_date": {"$ref": "#/definitions/epoch_timestamp"},
        "survey": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "solar_light": {"$ref": "#/definitions/booleanString"},
            "water_filter": {"$ref": "#/definitions/booleanString"},
            "children_under_5": {"$ref": "#/definitions/integerString"},
            "improved_cook_stove": {"$ref": "#/definitions/booleanString"},
            "LLIN": {"$ref": "#/definitions/integerString"},
            "latrine": {"$ref": "#/definitions/booleanString"},
            "how_water_treated": {"$ref": "#/definitions/sqlString"},
            "hand_washing_facilities": {"$ref": "#/definitions/booleanString"}
          }
        }
      },
      "additionalProperties": false
    },
    {
      "$comment": "Validation for type == person",
      "required": ["_id", "_rev", "name", "type"],
      "properties": {
        "_id": {"$ref": "#/definitions/sqlString"},
        "_rev": {"$ref": "#/definitions/rev"},
        "name": {"$ref": "#/definitions/sqlString"},
        "first_name": {"$ref": "#/definitions/sqlString"},
        "last_name": {"$ref": "#/definitions/sqlString"},
        "common_name": {"$ref": "#/definitions/sqlString"},
        "display_name": {"$ref": "#/definitions/sqlString"},
        "type": { "const": "person"},
        "notes": {"$ref": "#/definitions/sqlString"},
        "sex": {
          "$comment": [
            "This should be an enum of just ['male','female'], but",
            "there are malformed values in there including 'Maleale'."
          ],
          "$ref": "#/definitions/sqlString"
        },
        "phone": {"$ref": "#/definitions/phoneNumber"},
        "alternate_phone": {"$ref": "#/definitions/phoneNumber"},
        "parent": {
          "oneOf": [
            {
              "$comment": "FIXME: This just can't be right.",
              "const": "PARENT"
            },
            {
              "$ref": "#/definitions/reference"
            }
          ]
        },
        "contact": {"const": {} },
        "role": {"$ref": "#/definitions/sqlString"},
        "facility_id": {"$ref": "#/definitions/integerString"},
        "patient_id": {"$ref": "#/definitions/integerString"},
        "link_facility": {"$ref": "#/definitions/sqlString"},
        "cohort_number": {"$ref": "#/definitions/sqlString"},
        "date_of_graduation": {
          "$comment": "How many different date formats can we fit in?",
          "anyOf": [
              {"$ref": "#/definitions/ddmmyyyy_date"},
              {"$ref": "#/definitions/iso_date"}
            ]
        },
        "reported_date": {"$ref": "#/definitions/epoch_timestamp"},
        "imported_date": {"$ref": "#/definitions/iso_timestamp"},
        "geolocation": {"ref": "#/definitions/emptyString"},
        "delimiter": {"ref": "#/definitions/emptyString"},
        "debug_note": {"ref": "#/definitions/emptyString"},
        "age": {"ref": "#/definitions/integerString"},
        "date_of_birth": {
          "anyOf": [
            {"$ref": "#/definitions/iso_date"},
            {"$ref": "#/definitions/yyyymmmdd_date"},
            {
              "$comment": "Unfortunately we have some bogus dates.",
              "type": "string"
            }
          ]
        },
        "ephemeral_dob": {
          "$comment": "Ignoring most of these per conversation.",
          "propertyNames": {
            "enum": ["dob", "dob_iso", "dob_raw", "age_years", "dob_debug",
                     "age_months", "dob_approx", "dob_method",
                     "dob_calendar", "ephemeral_years", "ephemeral_months"]
          },
          "properties": {
            "dob_iso": {"$ref": "#/definitions/iso_date"}
          },
          "additionalProperties": { "type": "string" }
        },
        "dob_iso": {"$ref": "#/definitions/iso_date"},
        "dob_raw": { "type": "string" },
        "dob": { "type": "string" },
        "dob_8601": { "type": "string" },
        "age_years": { "type": "string" },
        "child_age": {"$ref": "#/definitions/floatString"},
        "dob_debug": { "type": "string" },
        "age_months": { "type": "string" },
        "dob_approx": { "type": "string" },
        "dob_method": { "type": "string" },
        "dob_calendar": { "type": "string" },
        "dob_calendar2": { "type": "string" },
        "ephemeral_years": { "type": "string" },
        "ephemeral_months": { "type": "string" },
        "person_age_in_years": {
          "anyOf": [
            {"$ref": "#/definitions/integerString"},
            {"const": "-1"}
          ]
        },
        "person_age_years": {"$ref": "#/definitions/integerString"},
        "date_of_birth_method": {
          "enum": ["", "approx"]
        },
        "person_age_in_months":  {
          "anyOf": [
            {"$ref": "#/definitions/integerString"},
            {"const": "-1"}
          ]
        },
        "person_age_months": {"$ref": "#/definitions/integerString"},
        "mothed_attended_anc": {"$ref": "#/definitions/booleanString"},
        "pregnant_at_registration": {"$ref": "#/definitions/booleanString"},
        "fp_eligible": {"$ref": "#/definitions/booleanString"},
        "delivered_in_facility": {"$ref": "#/definitions/booleanString"},
        "exclusively_breastfed": {"$ref": "#/definitions/booleanString"},
        "slept_under_treated_net": {"$ref": "#/definitions/booleanString"},
        "relationship_to_primary_caregiver": {
          "enum": ["", "spouse", "grandchild", "child", "sister",
                   "brother", "other"]
        },
        "relationship_pc_other": {"$ref": "#/definitions/sqlString"},
        "relationship_to_pc_other": {"$ref": "#/definitions/sqlString"},
        "cant_pay_now": {"$ref": "#/definitions/booleanString"},
        "fp_screening": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "g_edd": {"$ref": "#/definitions/mmmddyyyy_date"},
            "n_lam": {"$ref": "#/definitions/emptyString"},
            "n_condom": {"$ref": "#/definitions/emptyString"},
            "why_stop": {"$ref": "#/definitions/sqlString"},
            "g_edd_8601": {"$ref": "#/definitions/iso_date"},
            "n_referral": {"$ref": "#/definitions/emptyString"},
            "g_lmp_approx": {"$ref": "#/definitions/integerString"},
            "g_lmp_method": {"$ref": "#/definitions/sqlString"},
            "risk_factors": {"$ref": "#/definitions/sqlString"},
            "breastfeeding": {"$ref": "#/definitions/booleanString"},
            "g_display_edd": {"$ref": "#/definitions/emptyString"},
            "new_fp_method": {"$ref": "#/definitions/sqlString"},
            "current_method": {"$ref": "#/definitions/sqlString"},
            "days_since_lmp": {"$ref": "#/definitions/floatString"},
            "g_lmp_calendar": {"$ref": "#/definitions/iso_date"},
            "g_lmp_date_raw": {
              "$comment": "This can be a bunch of different date formats but thankfully we can use g_lmp_date_8601 instead.",
              "type": "string"
            },
            "n_side_effects": {"$ref": "#/definitions/emptyString"},
            "n_thank_client": {"$ref": "#/definitions/emptyString"},
            "pregnancy_test": {"$ref": "#/definitions/sqlString"},
            "take_on_switch": {"$ref": "#/definitions/booleanString"},
            "used_modern_fp": {"$ref": "#/definitions/booleanString"},
            "g_lmp_date_8601": {"$ref": "#/definitions/iso_date"},
            "unprotected_sex": {"$ref": "#/definitions/integerString"},
            "using_modern_fp": {"$ref": "#/definitions/booleanString"},
            "in_the_household": {"$ref": "#/definitions/booleanString"},
            "n_ecp_ineligible": {"$ref": "#/definitions/emptyString"},
            "n_pregnancy_test": {"$ref": "#/definitions/emptyString"},
            "n_confidentiality": {"$ref": "#/definitions/emptyString"},
            "reason_not_switch": {"$ref": "#/definitions/sqlString"},
            "most_recent_method": {"$ref": "#/definitions/sqlString"},
            "n_ecp_side_effects": {"$ref": "#/definitions/emptyString"},
            "confirmed_pregnancy": {"$ref": "#/definitions/booleanString"},
            "n_coc_breastfeeding": {"$ref": "#/definitions/emptyString"},
            "n_educate_modern_fp": {"$ref": "#/definitions/emptyString"},
            "spouse_included_hes": {"$ref": "#/definitions/booleanString"},
            "breastfeeding_duration":
              {"$ref": "#/definitions/integerString"},
            "heath_education_session": {"$ref": "#/definitions/emptyString"},
            "g_fp_method_administered": {"$ref": "#/definitions/sqlString"}
          }
        },
        "lmp_date": {"$ref": "#/definitions/iso_date"},
        "on_pill": {"$ref": "#/definitions/booleanString"},
        "newly_on_lam": {"$ref": "#/definitions/booleanString"},
        "newly_on_pill": {"$ref": "#/definitions/booleanString"},
        "on_injection": {"$ref": "#/definitions/booleanString"},
        "eligible_woman": {"$ref": "#/definitions/booleanString"},
        "partner_refuse": {"$ref": "#/definitions/booleanString"},
        "unprotected_sex": {"$ref": "#/definitions/integerString"},
        "has_risk_factors": {"$ref": "#/definitions/booleanString"},
        "is_referral_case": {"$ref": "#/definitions/booleanString"},
        "fear_side_effects": {"$ref": "#/definitions/booleanString"},
        "reason_not_switch": {"$ref": "#/definitions/sqlString"},
        "newly_on_injection": {"$ref": "#/definitions/booleanString"},
        "need_more_information": {"$ref": "#/definitions/booleanString"},
        "fp_method_administered": {"$ref": "#/definitions/sqlString"},
        "mother_attended_anc": {"$ref": "#/definitions/booleanString"},
        "external_id": {"$ref": "#/definitions/sqlString"},
        "community_unit": {"$ref": "#/definitions/sqlString"},
        "marital_status": {"$ref": "#/definitions/sqlString"},
        "is_in_emnch_pilot": {"$ref": "#/definitions/booleanString"},
        "is_in_dispersible_amoxicillin_pilot": {
          "$ref": "#/definitions/booleanString"
        },
        "is_in_ecd_pilot": {"$ref": "#/definitions/booleanString"},
        "is_in_rbf_pilot": {"$ref": "#/definitions/booleanString"},
        "in_cdbs_pilot": {"$ref": "#/definitions/booleanString"},
        "in_cbds_pilot": {"$ref": "#/definitions/booleanString"},
        "is_in_fp_pilot": {"$ref": "#/definitions/booleanString"},
        "phone_owner": {"$ref": "#/definitions/sqlString"},
        "mother_hiv_status": {"$ref": "#/definitions/sqlString"},
        "total_score": {"$ref": "#/definitions/integerString"},
        "national_id_number": {"$ref": "#/definitions/sqlString"},
        "children": { "const": [] },
        "contactFor": { "const": [] },
        "code": {"$ref": "#/definitions/emptyString"},
        "read": {
          "$comment": "Used for permissioning within MM app",
          "type": "array",
          "minLength": 1
        }
      },
      "additionalProperties": false,
      "if": {
        "properties": {
          "relationship_to_primary_caregiver": { "const": "other"}
        }
      },
      "then": {
        "anyOf": [
          {
            "required": "relationship_pc_other",
            "properties": {
              "relationship_pc_other": { "minLength": 1 }
            }
          },
          {
            "required": "relationship_to_pc_other",
            "properties": {
              "relationship_to_pc_other": { "minLength": 1 }
            }
          }
        ]
      }
    }
  ]
}
